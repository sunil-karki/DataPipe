abcd sunilkarki2

--Check url of repo
git config --get remote.origin.url
git remote show origin

--Reset/Uncommitting the commit I made
git reset --soft HEAD^ Will keep the modified changes in your working tree.
git reset --hard HEAD^ WILL THROW AWAY THE CHANGES YOU MADE 

--Stash it.
--Stashing acts as a stack, where you can push changes, and you pop them in reverse order.

git stash

Do the merge, and then pull the stash:

git stash pop

==============================================================================================

## Git Merge Overwrite changes of branch to master

Before you touch anything

git stash
git status # if anything shows up here, move it to your desktop

Now prepare master

git checkout master
git pull # if there is a problem in this step, it is outside the scope of this answer

Get feature all dressed up

git checkout feature
git merge --strategy=ours master

Go for the kill

git checkout master
git merge --no-ff feature

==============================================================================================


git reset
"uncommit". To undo the act of committing and leaving everything else intact, use:

git reset --soft HEAD^

To undo the act committing and everything staged, but leave the work tree (your files intact):

git reset HEAD^

To completely undo it, throwing away all uncommitted changes, resetting everything to the previous commit (as the original question asked):

git reset --hard HEAD^

==============================================================================================

